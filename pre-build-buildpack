#!/usr/bin/env bash

set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
APP="$1"; IMAGE="dokku/$APP"
echo "-----> Installing ffmpeg ..."
COMMAND=$(cat <<EOF
echo "-----> install requirements"

export DEBIAN_FRONTEND=noninteractive
echo "1"
wget -qO - https://packagecloud.io/dokku/dokku/gpgkey | apt-key add -
echo "2"
wget -qO - https://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -
echo "3"

apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7FCC7D46ACCC4CF8
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys FB2B6AA421CD193F

# apt-get install curl ca-certificates gnupg
# curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
# sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main"'
# sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

echo "3.25"

# sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" >> /etc/apt/sources.list.d/pgdg.list'
# wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add -
# wget -qO - https://packagecloud.io/dokku/dokku/gpgkey | apt-key add -

echo "3.5"

add-apt-repository --remove 'deb [arch=amd64] http://apt.postgresql.org/pub/repos/ap trusty-pgdg main'

apt-get -y dist-upgrade

apt-get clean
rm -rf /var/lib/apt/lists/*
rm -rf /var/lib/apt/lists/partial/*
rm -rf /etc/apt/sources.list.d/*
apt-get clean
apt-get -y update -qq
apt-get -y upgrade

echo "3.75"


apt-get -y update
echo "4"

add-apt-repository -y ppa:mc3man/trusty-media
echo "7"

# add-apt-repository -y 'deb [arch=amd64] https://apt-archive.postgresql.org/pub/repos/apt trusty-pgdg-archive main'
echo "8"

apt-get -y update
echo "9"

apt-get install -y software-properties-common
echo "5"

apt-get install -y --reinstall ca-certificates
echo "6"

apt-get install -y --force-yes ffmpeg
echo "10"

sleep 1 # wait so that docker run has not exited before docker attach
echo "11"

EOF
)
id=$(docker run -d $IMAGE /bin/bash -e -c "$COMMAND")
#enable logs
docker attach $id
test $(docker wait $id) -eq 0
docker commit $id $IMAGE > /dev/null
